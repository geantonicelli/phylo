% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions.R
\name{max_likelihood}
\alias{max_likelihood}
\alias{\alias{max_likelihood}}
\title{function to calculate a maximum likelihood phylogenetic tree}
\usage{
max_likelihood(
  alignment,
  type,
  model = TN93,
  clustering = bionj,
  pml.model = NULL,
  outgroup = NULL,
  clean = TRUE
)
}
\arguments{
\item{alignment}{an object of class alignment or DNAbin containing a DNA, RNA
or protein sequences alignment}

\item{type}{a character string without '' specifying the type of sequences,
i.e. DNA, RNA or protein (without default value)}

\item{model}{a character string without '' specifying the model to be used
for the calculation of the distances matrix, i.e. raw, N, TS, TV, JC69,
K80, F81, K81, F84, BH87, T92, TN93 (default), GG95, logdet, paralin,
indel, or indelblock}

\item{clustering}{a character string without '' specifying the clustering
algorithm to be used to build the phylogenetic tree, i.e classic
neighbor-joining (nj), improved neighbor-joining (bionj) (default), NJ or
bio-NJ from a distance matrix with possibly missing values (njs, bionjs),
balanced minimum evolution principle (fastme.bal), ordinary least-squares
minimum evolution principle (fastme.ols)}

\item{pml.model}{a character string without '' specifying the model to be
used for the calculation and optimisation of the maximum likelihood, for
nucleotide sequences they are 23, i.e. JC, F81, K80, HKY, TrNe, TrN, TPM1,
K81, TPM1u, TPM2, TPM2u, TPM3, TPM3u, TIM1e, TIM1, TIM2e, TIM2, TIM3e,
TIM3, TVMe, TVM, SYM, GTR, whereas for protein sequences there are 17
algorithms available, i.e. WAG, JTT, LG, Dayhoff, cpREV, mtmam, mtArt,
MtZoa, mtREV24, VT, RtREV, HIVw, HIVb, FLU, Blosum62, Dayhoff_DCMut,
JTT_DCMut. The default model corresponds to the model F81 for nucleotides
and it is set up with the parameters 'optBf=TRUE' and 'optQ=FALSE' in the
function 'optim.pml()' of the phangorn package inside the function
'max_likelihood()'. It is possible to run all the models at once for a
given type of sequence with the value 'all' without ''}

\item{outgroup}{a character string without '' specifying a taxon to be taken
as root for building the tree. The default value is NULL leading to an
unrooted tree}

\item{clean}{logical (default=TRUE) indicating if the input sequences should
be cleaned of any gap position or undefined nucleotide or aminoacid residue
to improve philogenetic prediction, set to FALSE if you want to clean the
sequences more gently and flexibly with 'clean_alignment' before
calculations or if you want to use the raw sequences alignment}
}
\value{
the function returns an object of class 'pml' of the 'phangorn'
package. Advanced and elaborated plots can be drawn in later steps based on
the tree data of the pml class object
}
\description{
this function is a wrapper around the functions
\code{'\link[seqinr]{dist.alignment}'}, \code{'\link[ape]{dist.dna}'},
\code{'\link[ape]{nj}'}, \code{'\link[ape]{bionj}'},
\code{'\link[ape]{fastme.bal}'}, \code{'\link[ape]{fastme.ols}'},
\code{'\link[phangorn]{pml}'} and \code{'\link[phangorn]{optim.pml}'}. it takes a sequences alignment in
format 'alignment' of 'DNAbin' matrix and perform all transformations and steps
to calculate a phylogenetic distance matrix based on similarity or identity
in the case of proteins or based in evolutionary models in the case of DNA or
RNA, to perform a likelihood-based phylogenetic clustering and to optimise the phylogeny by a
maximum likelihood algorithm
}
\examples{
data(fastaRNA)
data(phylipProt)
mytree <- max_likelihood(fastaRNA, type=RNA, clustering=fastme.bal,
                        pml.model=GTR, clean=FALSE)
\dontrun{mytree <- max_likelihood(phylipProt, type=protein, pml.model=Blosum62,
                        outgroup=YP_0010399)}
\dontrun{plot.phylo(mytree, type='u')}

}
\seealso{
\code{'\link{retrieve_seqs}'} \code{'\link{print_alignment}'}
\code{'\link{clean_alignment}'} \code{'\link{load_alignment}'}
\code{'\link{make_tree}'} \code{'\link{max_parsimony}'}
}
\author{
gerardo esteban antonicelli
}
